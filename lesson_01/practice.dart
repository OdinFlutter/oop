// –£–†–û–ö 1: –ü—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî –ö–ª–∞—Å–∏ —Ç–∞ –æ–±'—î–∫—Ç–∏
// –í–∏–∫–æ–Ω—É–π—Ç–µ –∑–∞–≤–¥–∞–Ω–Ω—è –ø–æ—Å—Ç—É–ø–æ–≤–æ, —Ä–æ–∑–∫–æ–º–µ–Ω—Ç–æ–≤—É—é—á–∏ taskX() –ø–æ —á–µ—Ä–∑—ñ
// –ó–∞–ø—É—Å–∫: dart practice.dart

import '../progress.dart';

void main() {
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å-—Ç—Ä–µ–∫–µ—Ä
  ProgressTracker.initialize();
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å –∫—É—Ä—Å—É
  ProgressTracker.displayProgress();
  
  print('\nüéØ –ü–†–ê–ö–¢–ò–ö–ê ‚Äî –£–†–û–ö 1: –ö–õ–ê–°–ò –¢–ê –û–ë'–Ñ–ö–¢–ò');
  print('=' * 50);

  // –†–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
  // task1();
  // task2();
  // task3();
  // task4();
  // task5();

  print('\nüí° –ü–æ—Ä–∞–¥–∞: –†–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ task1() –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏!');
  print('üìö –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ solutions.dart –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø—ñ—Å–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.');
}


// =============================================================================
// –ó–ê–í–î–ê–ù–ù–Ø 1: –ö–ª–∞—Å "–ö–æ–º–∞–Ω–¥–∞" (Team)
// =============================================================================

void task1() {
  print('–ó–ê–í–î–ê–ù–ù–Ø 1: –ö–ª–∞—Å "–ö–æ–º–∞–Ω–¥–∞" (Team)');
  print('=' * 30);

  /*
  üîé –©–æ —Ç–∞–∫–µ –∫–ª–∞—Å?
  –ö–ª–∞—Å ‚Äî —Ü–µ "—à–∞–±–ª–æ–Ω" –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–ª–∞—Å Team –æ–ø–∏—Å—É—î, —è–∫ –≤–∏–≥–ª—è–¥–∞—î –∫–æ–º–∞–Ω–¥–∞ –§–æ—Ä–º—É–ª–∏ 1.

  üèÅ –ù–∞–≤—ñ—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ?
  –ó–∞–≤–¥—è–∫–∏ –∫–ª–∞—Å–∞–º –º–∏ –º–æ–∂–µ–º–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –±–∞–≥–∞—Ç–æ —Ä—ñ–∑–Ω–∏—Ö –∫–æ–º–∞–Ω–¥, —è–∫—ñ –º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∞–ª–µ —Ä—ñ–∑–Ω—ñ –¥–∞–Ω—ñ.

  ‚úÖ –©–æ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏:
  1. –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å Team (–ö–æ–º–∞–Ω–¥–∞), —è–∫–∏–π –æ–ø–∏—Å—É—î –∫–æ–º–∞–Ω–¥—É –§–æ—Ä–º—É–ª–∏ 1.
     - name (String): –Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "Ferrari")
     - country (String): –∫—Ä–∞—ó–Ω–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "–Ü—Ç–∞–ª—ñ—è")
     - foundedYear (int): —Ä—ñ–∫ –∑–∞—Å–Ω—É–≤–∞–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 1950)
     - championships (int): –∫—ñ–ª—å–∫—ñ—Å—Ç—å —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤ (–ø–æ—á–∞—Ç–∫–æ–≤–æ 0)

  2. –î–æ–¥–∞–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —è–∫–∏–π –ø—Ä–∏–π–º–∞—î name, country, foundedYear.
     championships –º–∞—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ç–∞–≤–∞—Ç–∏ 0 (–±–æ –∫–æ–º–∞–Ω–¥–∞ —â–µ –Ω–µ –≤–∏–≥—Ä–∞–ª–∞).

  3. –î–æ–¥–∞–π –º–µ—Ç–æ–¥ displayTeamInfo(), —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É —É –∑—Ä—É—á–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ.
     –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
     Ferrari (–Ü—Ç–∞–ª—ñ—è), –∑–∞—Å–Ω–æ–≤–∞–Ω–∞ —É 1950, —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤: 0

  4. –î–æ–¥–∞–π –º–µ—Ç–æ–¥ winChampionship(), —è–∫–∏–π –∑–±—ñ–ª—å—à—É—î championships –Ω–∞ 1.
     –ü–æ—è—Å–Ω–µ–Ω–Ω—è: –∫–æ–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤–∏–≥—Ä–∞—î —á–µ–º–ø—ñ–æ–Ω–∞—Ç, —Ü–µ–π –º–µ—Ç–æ–¥ —Ç—Ä–µ–±–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏.

  üß© –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
  - –ö–ª–∞—Å ‚Äî —Ü–µ —è–∫ –∫—Ä–µ—Å–ª–µ–Ω–Ω—è –º–∞—à–∏–Ω–∏, –∞ –æ–±'—î–∫—Ç ‚Äî —Ü–µ –≤–∂–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞ –º–∞—à–∏–Ω–∞.
  - –ú–µ—Ç–æ–¥–∏ ‚Äî —Ü–µ "–¥—ñ—ó", —è–∫—ñ –º–æ–∂–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –æ–±'—î–∫—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –≤–∏–≥—Ä–∞—Ç–∏ —á–µ–º–ø—ñ–æ–Ω–∞—Ç).
  - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî —Ü–µ "—ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è", —è–∫ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∫–æ–º–∞–Ω–¥—É.

  üí° –ü—ñ–¥–∫–∞–∑–∫–∞:
  championships = 0 —Ç—Ä–µ–±–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ, –±–æ –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ –∫–æ–º–∞–Ω–¥–∞ —â–µ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–≥—Ä–∞–ª–∞.

  üî® –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
    Team ferrari = Team('Ferrari', '–Ü—Ç–∞–ª—ñ—è', 1950);
    ferrari.displayTeamInfo(); // Ferrari (–Ü—Ç–∞–ª—ñ—è), –∑–∞—Å–Ω–æ–≤–∞–Ω–∞ —É 1950, —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤: 0
    ferrari.winChampionship();
    ferrari.displayTeamInfo(); // Ferrari (–Ü—Ç–∞–ª—ñ—è), –∑–∞—Å–Ω–æ–≤–∞–Ω–∞ —É 1950, —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤: 1

  -----------------------------------------------------------------------------
  üü¢ –î–£–ñ–ï –î–ï–¢–ê–õ–¨–ù–û: –Ø–ö –°–¢–í–û–†–ò–¢–ò –ö–û–ù–°–¢–†–£–ö–¢–û–† –£ DART

  1. –©–æ —Ç–∞–∫–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä?
     –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî —Ü–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è, –∫–æ–ª–∏ –º–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç –∫–ª–∞—Å—É.
     –í—ñ–Ω –º–∞—î —Ç–∞–∫—É –∂ –Ω–∞–∑–≤—É, —è–∫ —ñ –∫–ª–∞—Å.

  2. –Ø–∫ –≤–∏–≥–ª—è–¥–∞—î –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —É Dart?
     –û—Å—å –±–∞–∑–æ–≤–∏–π –ø—Ä–∏–∫–ª–∞–¥:

     class Team {
       String name;
       String country;
       int foundedYear;
       int championships;

       // –¶–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:
       Team(this.name, this.country, this.foundedYear) {
         championships = 0; // –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤ —â–µ –Ω–µ–º–∞—î
       }
     }

     // –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
     // Team(...) ‚Äî —Ü–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä. –í –¥—É–∂–∫–∞—Ö ‚Äî –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, —è–∫—ñ —Ç—Ä–µ–±–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –æ–±'—î–∫—Ç–∞.
     // this.name –æ–∑–Ω–∞—á–∞—î, —â–æ –º–∏ –ø—Ä–∏—Å–≤–æ—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ name —Ü—å–æ–≥–æ –æ–±'—î–∫—Ç–∞.
     // championships = 0 ‚Äî –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è.

  3. –ß–∏–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ –º–µ—Ç–æ–¥—É?
     - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –æ–±'—î–∫—Ç–∞: Team('Ferrari', '–Ü—Ç–∞–ª—ñ—è', 1950)
     - –ú–µ—Ç–æ–¥ ‚Äî —Ü–µ –¥—ñ—è, —è–∫—É –º–æ–∂–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —É –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç: ferrari.displayTeamInfo()

  4. –Ø–∫ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä?
     Team mercedes = Team('Mercedes', '–ù—ñ–º–µ—á—á–∏–Ω–∞', 1954);
     // –¢–µ–ø–µ—Ä mercedes.name == 'Mercedes', mercedes.championships == 0

  5. –©–æ —Ç–∞–∫–µ this?
     this.name –æ–∑–Ω–∞—á–∞—î "–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å name —Ü—å–æ–≥–æ –æ–±'—î–∫—Ç–∞". –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± –≤—ñ–¥—Ä—ñ–∑–Ω–∏—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –∫–ª–∞—Å—É –≤—ñ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞.

  6. –©–µ –ø—Ä–∏–∫–ª–∞–¥ –∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—è–º–∏:

     class Team {
       String name;
       String country;
       int foundedYear;
       int championships;

       // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º–∏
       Team(this.name, this.country, this.foundedYear) {
         // championships –∑–∞–≤–∂–¥–∏ 0 –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ
         championships = 0;
       }

       void displayTeamInfo() {
         print('–ö–æ–º–∞–Ω–¥–∞: ' + name + ' (' + country + '), –∑–∞—Å–Ω–æ–≤–∞–Ω–∞ —É ' + foundedYear.toString() + ', —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤: ' + championships.toString());
       }

       void winChampionship() {
         championships = championships + 1;
       }
     }

     void main() {
       Team ferrari = Team('Ferrari', '–Ü—Ç–∞–ª—ñ—è', 1950);
       ferrari.displayTeamInfo(); // Ferrari (–Ü—Ç–∞–ª—ñ—è), –∑–∞—Å–Ω–æ–≤–∞–Ω–∞ —É 1950, —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤: 0
       ferrari.winChampionship();
       ferrari.displayTeamInfo(); // Ferrari (–Ü—Ç–∞–ª—ñ—è), –∑–∞—Å–Ω–æ–≤–∞–Ω–∞ —É 1950, —á–µ–º–ø—ñ–æ–Ω—Å—Ç–≤: 1
     }

  -----------------------------------------------------------------------------
  –Ø–∫—â–æ —â–æ—Å—å –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ ‚Äî —Å–ø—Ä–æ–±—É–π —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ü–µ–π –ø—Ä–∏–∫–ª–∞–¥ —É solutions.dart —ñ –∑–º—ñ–Ω–∏—Ç–∏ –¥–∞–Ω—ñ. –¢–∞–∫ –ª–µ–≥—à–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é—î –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä!
  */

  // –¢—É—Ç —Å—Ç–≤–æ—Ä–∏ —Å–≤—ñ–π –∫–ª–∞—Å —Ç–∞ –ø—Ä–æ—Ç–µ—Å—Ç—É–π –π–æ–≥–æ, —è–∫ —É –ø—Ä–∏–∫–ª–∞–¥—ñ –≤–∏—â–µ

  // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
  ProgressTracker.markTaskCompleted('lesson_01', 'task1');
  print('\n‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è 1 –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ!');
  print('üìä –ü—Ä–æ–≥—Ä–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.');

  print('');
}

// =============================================================================
// –ó–ê–í–î–ê–ù–ù–Ø 2: –Ü–º–µ–Ω–æ–≤–∞–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏ –¥–ª—è "–¢—Ä–∞—Å–∞" (Circuit)
// =============================================================================

void task2() {
  print('–ó–ê–í–î–ê–ù–ù–Ø 2: –Ü–º–µ–Ω–æ–≤–∞–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏ –¥–ª—è "–¢—Ä–∞—Å–∞" (Circuit)');
  print('=' * 50);

  /*
  üîé –©–æ —Ç–∞–∫–µ —ñ–º–µ–Ω–æ–≤–∞–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä?
  –Ü–º–µ–Ω–æ–≤–∞–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî —Ü–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Ç–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—î —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –æ–±'—î–∫—Ç–∏ –∑ –ø–µ–≤–Ω–∏–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ —Ç—Ä–∞—Å —É –§–æ—Ä–º—É–ª—ñ 1 (–º—ñ—Å—å–∫–∞, –æ–≤–∞–ª—å–Ω–∞ —Ç–æ—â–æ).

  üèÅ –ù–∞–≤—ñ—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ?
  –¶–µ –∑—Ä—É—á–Ω–æ, –∫–æ–ª–∏ —Ç—Ä–µ–±–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –±–∞–≥–∞—Ç–æ —Å—Ö–æ–∂–∏—Ö –æ–±'—î–∫—Ç—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –≤—Å—ñ –æ–≤–∞–ª—å–Ω—ñ —Ç—Ä–∞—Å–∏ –º–∞—é—Ç—å 4 –ø–æ–≤–æ—Ä–æ—Ç–∏, –∞ –º—ñ—Å—å–∫—ñ ‚Äî 90.

  ‚úÖ –©–æ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏:
  1. –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å Circuit (–¢—Ä–∞—Å–∞) –∑ —Ç–∞–∫–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
     - name (String): –Ω–∞–∑–≤–∞ —Ç—Ä–∞—Å–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "–ú–æ–Ω–∞–∫–æ")
     - country (String): –∫—Ä–∞—ó–Ω–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "–ú–æ–Ω–∞–∫–æ")
     - length (double): –¥–æ–≤–∂–∏–Ω–∞ –≤ –∫–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 3.337)
     - corners (int): –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤–æ—Ä–æ—Ç—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 19)

  2. –î–æ–¥–∞–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏:
     - –û—Å–Ω–æ–≤–Ω–∏–π: Circuit(name, country, length, corners)
     - Circuit.street() ‚Äî –¥–ª—è –º—ñ—Å—å–∫–∏—Ö —Ç—Ä–∞—Å (corners = 90)
     - Circuit.oval() ‚Äî –¥–ª—è –æ–≤–∞–ª—ñ–≤ (corners = 4)

  3. –î–æ–¥–∞–π –º–µ—Ç–æ–¥ displayCircuitInfo(), —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–∞—Å—É —É –∑—Ä—É—á–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ.
     –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
     –ú–æ–Ω–∞–∫–æ (–ú–æ–Ω–∞–∫–æ), 3.337 –∫–º, –ø–æ–≤–æ—Ä–æ—Ç—ñ–≤: 19

  üß© –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
  - –Ü–º–µ–Ω–æ–≤–∞–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏ ‚Äî —Ü–µ —è–∫ —à–∞–±–ª–æ–Ω–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ —Ç—Ä–∞—Å.
  - –¶–µ –¥–æ–ø–æ–º–∞–≥–∞—î —É–Ω–∏–∫–∞—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è –∫–æ–¥—É —Ç–∞ —Ä–æ–±–∏—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –ø—Ä–æ—Å—Ç—ñ—à–∏–º.

  üí° –ü—ñ–¥–∫–∞–∑–∫–∞:
  –î–ª—è —ñ–º–µ–Ω–æ–≤–∞–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å:
    Circuit.street(String name, String country, double length) : this(name, country, length, 90);

  üî® –ü–æ–∫—Ä–æ–∫–æ–≤–∏–π –ø—Ä–∏–∫–ª–∞–¥:

    class Circuit {
      String name;
      String country;
      double length;
      int corners;

      // –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
      Circuit(this.name, this.country, this.length, this.corners);

      // –Ü–º–µ–Ω–æ–≤–∞–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –º—ñ—Å—å–∫–æ—ó —Ç—Ä–∞—Å–∏
      Circuit.street(String name, String country, double length)
        : this(name, country, length, 90);

      // –Ü–º–µ–Ω–æ–≤–∞–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –æ–≤–∞–ª—å–Ω–æ—ó —Ç—Ä–∞—Å–∏
      Circuit.oval(String name, String country, double length)
        : this(name, country, length, 4);

      void displayCircuitInfo() {
        print('–¢—Ä–∞—Å–∞: ' + name + ' (' + country + '), ' + length.toString() + ' –∫–º, –ø–æ–≤–æ—Ä–æ—Ç—ñ–≤: ' + corners.toString());
      }
    }

    void main() {
      Circuit monaco = Circuit('–ú–æ–Ω–∞–∫–æ', '–ú–æ–Ω–∞–∫–æ', 3.337, 19);
      Circuit street = Circuit.street('–õ–∞—Å-–í–µ–≥–∞—Å', '–°–®–ê', 6.2);
      Circuit oval = Circuit.oval('–Ü–Ω–¥—ñ–∞–Ω–∞–ø–æ–ª—ñ—Å', '–°–®–ê', 4.0);
      monaco.displayCircuitInfo();
      street.displayCircuitInfo();
      oval.displayCircuitInfo();
    }

  -----------------------------------------------------------------------------
  –Ø–∫—â–æ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ ‚Äî —Å–∫–æ–ø—ñ—é–π —Ü–µ–π –ø—Ä–∏–∫–ª–∞–¥ —É solutions.dart —ñ –∑–º—ñ–Ω—é–π –¥–∞–Ω—ñ. –¢–∞–∫ –ª–µ–≥—à–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é—é—Ç—å —ñ–º–µ–Ω–æ–≤–∞–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏!
  */

  // –¢—É—Ç —Å—Ç–≤–æ—Ä–∏ —Å–≤—ñ–π –∫–ª–∞—Å —Ç–∞ –ø—Ä–æ—Ç–µ—Å—Ç—É–π –π–æ–≥–æ, —è–∫ —É –ø—Ä–∏–∫–ª–∞–¥—ñ –≤–∏—â–µ

  print('');

  // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
  ProgressTracker.markTaskCompleted('lesson_01', 'task2');
  print('\n‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è 2 –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ!');
  print('üìä –ü—Ä–æ–≥—Ä–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.');

  print('');}

// =============================================================================
// –ó–ê–í–î–ê–ù–ù–Ø 3: –ö–ª–∞—Å –∑ –æ–±—á–∏—Å–ª—é–≤–∞–Ω–æ—é –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é (RaceResult)
// =============================================================================

void task3() {
  print('–ó–ê–í–î–ê–ù–ù–Ø 3: –ö–ª–∞—Å –∑ –æ–±—á–∏—Å–ª—é–≤–∞–Ω–æ—é –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é (RaceResult)');
  print('=' * 40);

  /*
  üîé –©–æ —Ç–∞–∫–µ –æ–±—á–∏—Å–ª—é–≤–∞–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (getter)?
  –û–±—á–∏—Å–ª—é–≤–∞–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (getter) ‚Äî —Ü–µ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å, —è–∫–∞ –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É, –∞ —Ä–∞—Ö—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–ª—ñ–≤ –∑–∞ –≥–æ–Ω–∫—É –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –º—ñ—Å—Ü—è —Ç–∞ –Ω–∞–π—à–≤–∏–¥—à–æ–≥–æ –∫–æ–ª–∞.

  üèÅ –ù–∞–≤—ñ—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ?
  –¶–µ –¥–æ–∑–≤–æ–ª—è—î –∑–∞–≤–∂–¥–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —ñ–Ω—à–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π. –ù–µ —Ç—Ä–µ–±–∞ –≤—Ä—É—á–Ω—É —Ä–∞—Ö—É–≤–∞—Ç–∏ –±–∞–ª–∏ ‚Äî –≤—Å–µ —Ä–∞—Ö—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.

  ‚úÖ –©–æ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏:
  1. –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å RaceResult (–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–Ω–∫–∏):
     - driverName (String): —ñ–º'—è –ø—ñ–ª–æ—Ç–∞
     - position (int): –º—ñ—Å—Ü–µ (1-20)
     - fastestLap (bool): —á–∏ –±—É–≤ –Ω–∞–π—à–≤–∏–¥—à–∏–π –∫—Ä—É–≥

  2. –î–æ–¥–∞–π –æ–±—á–∏—Å–ª—é–≤–∞–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å points (getter):
     - 1 –º—ñ—Å—Ü–µ: 25 –±–∞–ª—ñ–≤ (+1 –∑–∞ –Ω–∞–π—à–≤–∏–¥—à–µ –∫–æ–ª–æ)
     - 2 –º—ñ—Å—Ü–µ: 18 –±–∞–ª—ñ–≤
     - 3 –º—ñ—Å—Ü–µ: 15 –±–∞–ª—ñ–≤
     - 4 –º—ñ—Å—Ü–µ: 12 –±–∞–ª—ñ–≤
     - 5 –º—ñ—Å—Ü–µ: 10 –±–∞–ª—ñ–≤
     - 6 –º—ñ—Å—Ü–µ: 8 –±–∞–ª—ñ–≤
     - 7 –º—ñ—Å—Ü–µ: 6 –±–∞–ª—ñ–≤
     - 8 –º—ñ—Å—Ü–µ: 4 –±–∞–ª–∏
     - 9 –º—ñ—Å—Ü–µ: 2 –±–∞–ª–∏
     - 10 –º—ñ—Å—Ü–µ: 1 –±–∞–ª
     - 11+ –º—ñ—Å—Ü–µ: 0 –±–∞–ª—ñ–≤

  3. –î–æ–¥–∞–π –º–µ—Ç–æ–¥ displayResult(), —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–Ω–∫–∏ —É –≤–∏–≥–ª—è–¥—ñ:
     –ú–∞–∫—Å –§–µ—Ä—Å—Ç–∞–ø–ø–µ–Ω ‚Äî 1 –º—ñ—Å—Ü–µ, 26 –±–∞–ª—ñ–≤ (–Ω–∞–π—à–≤–∏–¥—à–µ –∫–æ–ª–æ)

  üß© –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
  - getter ‚Äî —Ü–µ —è–∫ —Ñ–æ—Ä–º—É–ª–∞, —è–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–∞—Ö—É—î –∑–Ω–∞—á–µ–Ω–Ω—è
  - –¶–µ –∑—Ä—É—á–Ω–æ –¥–ª—è –±–∞–ª—ñ–≤, –±–æ –≤–æ–Ω–∏ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ –º—ñ—Å—Ü—è —Ç–∞ –Ω–∞–π—à–≤–∏–¥—à–æ–≥–æ –∫–æ–ª–∞

  üí° –ü—ñ–¥–∫–∞–∑–∫–∞:
  getter –æ–≥–æ–ª–æ—à—É—î—Ç—å—Å—è —Ç–∞–∫:
    int get points { ... }

  üî® –ü–æ–∫—Ä–æ–∫–æ–≤–∏–π –ø—Ä–∏–∫–ª–∞–¥:

    class RaceResult {
      String driverName;
      int position;
      bool fastestLap;

      RaceResult(this.driverName, this.position, this.fastestLap);

      // –û–±—á–∏—Å–ª—é–≤–∞–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (getter)
      int get points {
        int pts = 0;
        switch (position) {
          case 1: pts = 25; break;
          case 2: pts = 18; break;
          case 3: pts = 15; break;
          case 4: pts = 12; break;
          case 5: pts = 10; break;
          case 6: pts = 8; break;
          case 7: pts = 6; break;
          case 8: pts = 4; break;
          case 9: pts = 2; break;
          case 10: pts = 1; break;
          default: pts = 0;
        }
        if (fastestLap && position <= 10) pts += 1;
        return pts;
      }

      void displayResult() {
        String msg = driverName + ' ‚Äî ' + position.toString() + ' –º—ñ—Å—Ü–µ, ' + points.toString() + ' –±–∞–ª—ñ–≤';
        if (fastestLap && position <= 10) msg += ' (–Ω–∞–π—à–≤–∏–¥—à–µ –∫–æ–ª–æ)';
        print(msg);
      }
    }

    void main() {
      RaceResult winner = RaceResult('–ú–∞–∫—Å –§–µ—Ä—Å—Ç–∞–ø–ø–µ–Ω', 1, true);
      winner.displayResult();
    }

  -----------------------------------------------------------------------------
  –Ø–∫—â–æ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ ‚Äî —Å–∫–æ–ø—ñ—é–π —Ü–µ–π –ø—Ä–∏–∫–ª–∞–¥ —É solutions.dart —ñ –∑–º—ñ–Ω—é–π –¥–∞–Ω—ñ. –¢–∞–∫ –ª–µ–≥—à–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é—î getter!
  */

  // –¢—É—Ç —Å—Ç–≤–æ—Ä–∏ —Å–≤—ñ–π –∫–ª–∞—Å —Ç–∞ –ø—Ä–æ—Ç–µ—Å—Ç—É–π –π–æ–≥–æ, —è–∫ —É –ø—Ä–∏–∫–ª–∞–¥—ñ –≤–∏—â–µ

  print('');

  // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
  ProgressTracker.markTaskCompleted('lesson_01', 'task3');
  print('\n‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è 3 –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ!');
  print('üìä –ü—Ä–æ–≥—Ä–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.');

  print('');}

// =============================================================================
// –ó–ê–í–î–ê–ù–ù–Ø 4: –í–∑–∞—î–º–æ–¥—ñ—è –æ–±'—î–∫—Ç—ñ–≤ (PitStop + Driver)
// =============================================================================

void task4() {
  print('–ó–ê–í–î–ê–ù–ù–Ø 4: –í–∑–∞—î–º–æ–¥—ñ—è –æ–±\'—î–∫—Ç—ñ–≤ (PitStop + Driver)');
  print('=' * 30);

  /*
  üîé –©–æ —Ç–∞–∫–µ –≤–∑–∞—î–º–æ–¥—ñ—è –æ–±'—î–∫—Ç—ñ–≤?
  –í–∑–∞—î–º–æ–¥—ñ—è –æ–±'—î–∫—Ç—ñ–≤ ‚Äî —Ü–µ –∫–æ–ª–∏ –æ–¥–∏–Ω –æ–±'—î–∫—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, Driver) –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —ñ–Ω—à–∏–π (PitStop) –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥—ñ—ó. –¶–µ –æ—Å–Ω–æ–≤–∞ –û–û–ü: –æ–±'—î–∫—Ç–∏ —Å–ø—ñ–≤–ø—Ä–∞—Ü—é—é—Ç—å –º—ñ–∂ —Å–æ–±–æ—é.

  üèÅ –ù–∞–≤—ñ—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ?
  –¶–µ –¥–æ–∑–≤–æ–ª—è—î –º–æ–¥–µ–ª—é–≤–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó, –¥–µ –æ–±'—î–∫—Ç–∏ —Å–ø—ñ–≤–ø—Ä–∞—Ü—é—é—Ç—å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—ñ–ª–æ—Ç –∑–∞—ó–∂–¥–∂–∞—î –Ω–∞ –ø—ñ—Ç-—Å—Ç–æ–ø).

  ‚úÖ –©–æ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏:
  1. –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å PitStop (–ü—ñ—Ç-—Å—Ç–æ–ø):
     - duration (double): —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —É —Å–µ–∫—É–Ω–¥–∞—Ö
     - tyreBrand (String): –º–∞—Ä–∫–∞ —à–∏–Ω
     - fuelAdded (double): —Å–∫—ñ–ª—å–∫–∏ –ø–∞–ª—å–Ω–æ–≥–æ –¥–æ–¥–∞–ª–∏

  2. –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å Driver (–ü—ñ–ª–æ—Ç):
     - name (String): —ñ–º'—è
     - currentTyres (String): –ø–æ—Ç–æ—á–Ω–∏–π —Ç–∏–ø —à–∏–Ω
     - fuel (double): –∑–∞–ª–∏—à–æ–∫ –ø–∞–ª—å–Ω–æ–≥–æ
     - –ú–µ—Ç–æ–¥ performPitStop(PitStop pitStop): –∑–º—ñ–Ω—é—î —à–∏–Ω–∏, –¥–æ–¥–∞—î –ø–∞–ª–∏–≤–æ, –≤–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é

  3. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü—ñ –∫–ª–∞—Å–∏ —Ä–∞–∑–æ–º:
     Driver lando = Driver('–õ–∞–Ω–¥–æ –ù–æ—Ä—Ä—ñ—Å', 'Medium', 50.0);
     PitStop quickStop = PitStop(2.3, 'Soft', 30.0);
     lando.performPitStop(quickStop);

  üß© –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
  - –¶–µ —ñ —î –æ–±'—î–∫—Ç–Ω–æ-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω—ñ—Å—Ç—å: –æ–±'—î–∫—Ç–∏ –≤–∑–∞—î–º–æ–¥—ñ—é—Ç—å –º—ñ–∂ —Å–æ–±–æ—é
  - –¢–∞–∫ –ª–µ–≥—à–µ –º–æ–¥–µ–ª—é–≤–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏

  üí° –ü—ñ–¥–∫–∞–∑–∫–∞:
  –£ –º–µ—Ç–æ–¥—ñ performPitStop –∑–º—ñ–Ω–∏ currentTyres —Ç–∞ fuel –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ pitStop.

  üî® –ü–æ–∫—Ä–æ–∫–æ–≤–∏–π –ø—Ä–∏–∫–ª–∞–¥:

    class PitStop {
      double duration;
      String tyreBrand;
      double fuelAdded;

      PitStop(this.duration, this.tyreBrand, this.fuelAdded);
    }

    class Driver {
      String name;
      String currentTyres;
      double fuel;

      Driver(this.name, this.currentTyres, this.fuel);

      void performPitStop(PitStop pitStop) {
        currentTyres = pitStop.tyreBrand;
        fuel += pitStop.fuelAdded;
        print(name + ' –∑—Ä–æ–±–∏–≤ –ø—ñ—Ç-—Å—Ç–æ–ø: —à–∏–Ω–∏ ‚Äî ' + currentTyres + ', –ø–∞–ª—å–Ω–æ–≥–æ ‚Äî ' + fuel.toString() + ' –ª, —á–∞—Å: ' + pitStop.duration.toString() + ' —Å–µ–∫');
      }
    }

    void main() {
      Driver lando = Driver('–õ–∞–Ω–¥–æ –ù–æ—Ä—Ä—ñ—Å', 'Medium', 50.0);
      PitStop quickStop = PitStop(2.3, 'Soft', 30.0);
      lando.performPitStop(quickStop);
    }

  -----------------------------------------------------------------------------
  –Ø–∫—â–æ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ ‚Äî —Å–∫–æ–ø—ñ—é–π —Ü–µ–π –ø—Ä–∏–∫–ª–∞–¥ —É solutions.dart —ñ –∑–º—ñ–Ω—é–π –¥–∞–Ω—ñ. –¢–∞–∫ –ª–µ–≥—à–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫ –æ–±'—î–∫—Ç–∏ –≤–∑–∞—î–º–æ–¥—ñ—é—Ç—å –º—ñ–∂ —Å–æ–±–æ—é!
  */

  // –¢—É—Ç —Å—Ç–≤–æ—Ä–∏ —Å–≤–æ—ó –∫–ª–∞—Å–∏ —Ç–∞ –ø—Ä–æ—Ç–µ—Å—Ç—É–π —ó—Ö, —è–∫ —É –ø—Ä–∏–∫–ª–∞–¥—ñ –≤–∏—â–µ

  print('');

  // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
  ProgressTracker.markTaskCompleted('lesson_01', 'task4');
  print('\n‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è 4 –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ!');
  print('üìä –ü—Ä–æ–≥—Ä–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.');

  print('');}

// =============================================================================
// –ó–ê–í–î–ê–ù–ù–Ø 5: –°–∏–º—É–ª—è—Ç–æ—Ä –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó (QualifyingSession)
// =============================================================================

void task5() {
  print('–ó–ê–í–î–ê–ù–ù–Ø 5: –°–∏–º—É–ª—è—Ç–æ—Ä –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó (QualifyingSession)');
  print('=' * 40);

  /*
  üîé –©–æ —Ç–∞–∫–µ —Å–∏–º—É–ª—è—Ü—ñ—è?
  –°–∏–º—É–ª—è—Ü—ñ—è ‚Äî —Ü–µ –∫–æ–ª–∏ –º–∏ —ñ–º—ñ—Ç—É—î–º–æ —Ä–µ–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å —É –ø—Ä–æ–≥—Ä–∞–º—ñ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è —É –§–æ—Ä–º—É–ª—ñ 1.

  üèÅ –ù–∞–≤—ñ—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ?
  –¶–µ –¥–æ–∑–≤–æ–ª—è—î —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏ –ª–æ–≥—ñ–∫—É, –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑—ñ —Å–ø–∏—Å–∫–∞–º–∏, –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ —á–∏—Å–ª–∞–º–∏, –≤–∑–∞—î–º–æ–¥—ñ—î—é –æ–±'—î–∫—Ç—ñ–≤. –¢–∞–∫—ñ –∑–∞–≤–¥–∞–Ω–Ω—è —á–∞—Å—Ç–æ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è —É —Ä–µ–∞–ª—å–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.

  ‚úÖ –©–æ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏:
  1. –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å QualifyingSession (–ö–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è):
     - circuit (String): –Ω–∞–∑–≤–∞ —Ç—Ä–∞—Å–∏
     - weather (String): –ø–æ–≥–æ–¥–∞
     - List<Driver> drivers: —Å–ø–∏—Å–æ–∫ –ø—ñ–ª–æ—Ç—ñ–≤

  2. –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏:
     - addDriver(Driver driver): –¥–æ–¥–∞—Ç–∏ –ø—ñ–ª–æ—Ç–∞
     - simulateSession(): —Å–∏–º—É–ª—è—Ü—ñ—è –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó (–ø—Ä–∏–∑–Ω–∞—á–∞—î –≤–∏–ø–∞–¥–∫–æ–≤—ñ —á–∞—Å–∏)
     - displayResults(): –≤–∏–≤–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏

  3. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π Driver —ñ Circuit –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å.
     QualifyingSession quali = QualifyingSession('–°—ñ–ª—å–≤–µ—Ä—Å—Ç–æ—É–Ω', '–°–æ–Ω—è—á–Ω–æ');
     quali.addDriver(Driver('–õ—å—é—ó—Å –•–µ–º—ñ–ª—Ç–æ–Ω', 44, '–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è'));
     quali.simulateSession();
     quali.displayResults();

  üß© –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
  - –°–∏–º—É–ª—è—Ü—ñ—è ‚Äî —Ü–µ —á—É–¥–æ–≤–∏–π —Å–ø–æ—Å—ñ–± –ø–æ—Ç—Ä–µ–Ω—É–≤–∞—Ç–∏—Å—è –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –æ–±'—î–∫—Ç–∞–º–∏, —Å–ø–∏—Å–∫–∞–º–∏, –≤–∏–ø–∞–¥–∫–æ–≤—ñ—Å—Ç—é
  - –¢–∞–∫—ñ –∑–∞–≤–¥–∞–Ω–Ω—è —á–∞—Å—Ç–æ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è —É —Ä–µ–∞–ª—å–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö

  üí° –ü—ñ–¥–∫–∞–∑–∫–∞:
  –î–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö —á–∏—Å–µ–ª –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π Random –∑ dart:math

  üî® –ü–æ–∫—Ä–æ–∫–æ–≤–∏–π –ø—Ä–∏–∫–ª–∞–¥:

    import 'dart:math';

    class Driver {
      String name;
      int number;
      String country;
      double qualifyingTime;

      Driver(this.name, this.number, this.country);
    }

    class QualifyingSession {
      String circuit;
      String weather;
      List<Driver> drivers = [];
      Random random = Random();

      QualifyingSession(this.circuit, this.weather);

      void addDriver(Driver driver) {
        drivers.add(driver);
      }

      void simulateSession() {
        for (var driver in drivers) {
          // –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —á–∞—Å –≤—ñ–¥ 1:25.000 –¥–æ 1:30.000
          driver.qualifyingTime = 85 + random.nextDouble() * 5;
        }
        drivers.sort((a, b) => a.qualifyingTime.compareTo(b.qualifyingTime));
      }

      void displayResults() {
        print('–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó –Ω–∞ —Ç—Ä–∞—Å—ñ ' + circuit + ' (' + weather + '):');
        for (int i = 0; i < drivers.length; i++) {
          var d = drivers[i];
          print('${i + 1}. ${d.name} (${d.country}) ‚Äî ${d.qualifyingTime.toStringAsFixed(3)} —Å–µ–∫');
        }
      }
    }

    void main() {
      QualifyingSession quali = QualifyingSession('–°—ñ–ª—å–≤–µ—Ä—Å—Ç–æ—É–Ω', '–°–æ–Ω—è—á–Ω–æ');
      quali.addDriver(Driver('–õ—å—é—ó—Å –•–µ–º—ñ–ª—Ç–æ–Ω', 44, '–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è'));
      quali.addDriver(Driver('–ú–∞–∫—Å –§–µ—Ä—Å—Ç–∞–ø–ø–µ–Ω', 1, '–ù—ñ–¥–µ—Ä–ª–∞–Ω–¥–∏'));
      quali.simulateSession();
      quali.displayResults();
    }

  -----------------------------------------------------------------------------
  –Ø–∫—â–æ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ ‚Äî —Å–∫–æ–ø—ñ—é–π —Ü–µ–π –ø—Ä–∏–∫–ª–∞–¥ —É solutions.dart —ñ –∑–º—ñ–Ω—é–π –¥–∞–Ω—ñ. –¢–∞–∫ –ª–µ–≥—à–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é—î —Å–∏–º—É–ª—è—Ü—ñ—è!
  */

  // –¢—É—Ç —Å—Ç–≤–æ—Ä–∏ —Å–≤—ñ–π –∫–ª–∞—Å —Ç–∞ –ø—Ä–æ—Ç–µ—Å—Ç—É–π –π–æ–≥–æ, —è–∫ —É –ø—Ä–∏–∫–ª–∞–¥—ñ –≤–∏—â–µ

  print('');

  // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
  ProgressTracker.markTaskCompleted('lesson_01', 'task5');
  print('\n‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è 5 –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ!');
  print('üìä –ü—Ä–æ–≥—Ä–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.');

  print('');}

// =============================================================================
// –ü–Ü–î–ö–ê–ó–ö–ò –î–õ–Ø –ù–û–í–ê–ß–ö–Ü–í
// =============================================================================

/*
–ü–Ü–î–ö–ê–ó–ö–ò:

1. –ó–∞–≤–∂–¥–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–π –≤—Å—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ
2. –î–ª—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∑–∞–ø–∏—Å—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π this.–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å
3. –Ü–º–µ–Ω–æ–≤–∞–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏ ‚Äî —Ü–µ –∑—Ä—É—á–Ω–æ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –æ–±'—î–∫—Ç—ñ–≤
4. –ì–µ—Ç—Ç–µ—Ä (get) ‚Äî —Ü–µ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å, —è–∫–∞ —Ä–∞—Ö—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
5. –ú–µ—Ç–æ–¥–∏ —Ä–æ–±–ª—è—Ç—å –∫–ª–∞—Å "–∂–∏–≤–∏–º" ‚Äî –¥–æ–¥–∞—é—Ç—å –ø–æ–≤–µ–¥—ñ–Ω–∫—É

DART:
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π late –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
- final ‚Äî —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
- const ‚Äî –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç
*/
